name: prod
run-name: ${{ github.actor }} is creating new masterpice
on:
  push:
    branches: [ main, dev ]

jobs:
  setup-network:
    runs-on: self-hosted
    steps:
      - name: Remove old Docker network (if exists)
        run: docker network rm my-network || true

      - name: Create a new Docker network
        run: docker network create my-network

  build-and-run:
    needs: setup-network
    runs-on: self-hosted
    strategy:
      matrix:
        include:
          - app: 'onetime-spider'
            port: '12001'
          - app: 'simple-avatars'
            port: '12002'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image for ${{ matrix.app }}
        run: |
          cd ${{ matrix.app }}
          docker build -t ${{ matrix.app }}:latest .

      - name: Stop and remove previous Docker container
        run: |
          docker stop ${{ matrix.app }} || true
          docker rm ${{ matrix.app }} || true

      - name: Run Docker container
        run: |
          docker run -d --name ${{ matrix.app }} --network my-network -p ${{ matrix.port }}:80 ${{ matrix.app }}:latest

  setup-nginx:
    needs: build-and-run
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Stop and remove previous Nginx container
        run: |
          docker stop nginx || true
          docker rm nginx || true

      - name: Generate NGINX Configuration
        run: |
          echo "events {}" > nginx.conf
          echo "http {" >> nginx.conf
          echo "  server {" >> nginx.conf
          echo "      listen 80;" >> nginx.conf
          echo "      server_name onetime-spider.akrbout.ru;" >> nginx.conf
          echo "      location /docs {" >> nginx.conf
          echo "          proxy_pass http://onetime-spider:12001;" >> nginx.conf
          echo "      }" >> nginx.conf
          echo "  }" >> nginx.conf
          echo "  server {" >> nginx.conf
          echo "      listen 80;" >> nginx.conf
          echo "      server_name simple-avatars.akrbout.ru;" >> nginx.conf
          echo "      location /docs {" >> nginx.conf
          echo "          proxy_pass http://simple-avatars:12002;" >> nginx.conf
          echo "      }" >> nginx.conf
          echo "  }" >> nginx.conf
          echo "}" >> nginx.conf

      - name: Run NGINX container
        run: |
          docker run -d -p 80:80 --name nginx --network my-network --mount type=bind,source=$(pwd)/nginx.conf,target=/etc/nginx/nginx.conf nginx:latest
