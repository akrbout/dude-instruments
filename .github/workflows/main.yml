name: prod
run-name: ${{ github.actor }} is creating new masterpice
on:
  push:
    branches: [ main, dev ]

jobs:
  build-and-run:
    runs-on: self-hosted
    strategy:
      matrix:
        app: [ 'onetime-spider', 'simple-avatars' ]
    steps:
      - uses: actions/checkout@v4
      - name: Echo Something
        run: echo Hello world!
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image for ${{ matrix.app }}
        run: |
          cd ${{ matrix.app }}
          docker build -t ${{ matrix.app }}:latest .

      - name: Stop and remove previous Docker container
        run: |
          docker stop ${{ matrix.app }} || true
          docker rm ${{ matrix.app }} || true

      - name: Run Docker container
        run: |
          if [ "${{ matrix.app }}" == "onetime-spider" ]; then
            docker run -d --name ${{ matrix.app }} -p 12001:80 ${{ matrix.app }}:latest
          elif [ "${{ matrix.app }}" == "simple-avatars" ]; then
            docker run -d --name ${{ matrix.app }} -p 12002:80 ${{ matrix.app }}:latest
          fi

  setup-nginx:
    needs: build-and-run
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Stop and remove previous Nginx container
        run: |
          docker stop nginx || true
          docker rm nginx || true

      - name: Generate NGINX Configuration
        run: |
          echo "server {" > nginx.conf
          echo "    listen 80;" >> nginx.conf
          echo "    server_name onetime-spider.akrbout.ru;" >> nginx.conf
          echo "    location / {" >> nginx.conf
          echo "        proxy_pass http://localhost:12001;" >> nginx.conf
          echo "    }" >> nginx.conf
          echo "}" >> nginx.conf
#          echo "" >> nginx.conf
#          echo "  server {" > nginx.conf
#          echo "      listen 80;" >> nginx.conf
#          echo "      server_name simple-avatars.akrbout.ru;" >> nginx.conf
#          echo "      location / {" >> nginx.conf
#          echo "          proxy_pass http://localhost:12002;" >> nginx.conf
#          echo "      }" >> nginx.conf
#          echo "  }" >> nginx.conf
#          echo "}" >> nginx.conf

      - name: Run NGINX container
        run: |
          docker run -d -p 80:80 --name nginx --mount type=bind,source=$(pwd)/nginx.conf,target=/etc/nginx/nginx.conf nginx:latest
